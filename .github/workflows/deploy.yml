name: Deploy to ECR
# This is a basic workflow to help you get started with Actions

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest
    permissions:
      id-token: write # need this for OIDC
      contents: read

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    - name: Check out code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        role-to-assume: arn:aws:iam::735948513526:role/GitHubActions

    - name: SHA
      uses: benjlevesque/short-sha@v2.2
      id: short-sha
      with:
        length: 6

    - name: Print SHA
      run: echo ${{ steps.short-sha.outputs.sha }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: docker_nodejs_demo
        IMAGE_TAG: nodejs_demo_image.${{ steps.short-sha.outputs.sha }}
      run: |
        echo print_variables
        echo $ECR_REGISTRY
        echo $ECR_REPOSITORY
        echo $IMAGE_TAG
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Clear Docker Images
      run: docker rmi -f $(docker images -q)

    - name: Download task definition
      run: |
        echo ${{ steps.build-image.outputs.image }}
        aws ecs describe-task-definition --task-definition task_test --query taskDefinition > task-definition.json

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: nodejs-container
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: nodejs-service
        cluster: test_cluster
        wait-for-service-stability: true